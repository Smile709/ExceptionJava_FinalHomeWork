/*Напишите приложение, которое будет запрашивать у пользователя следующие данные именно в таком порядке, разделенные пробелом:
Фамилия Имя Отчество дата рождения номер телефона пол
Форматы данных:
фамилия, имя, отчество - строки
дата рождения - строка формата dd.mm.yyyy
номер телефона - целое беззнаковое число без форматирования
пол - символ латиницей f или m.
Приложение должно проверить введенные данные по количеству. Если количество не совпадает, вернуть код ошибки, обработать его и показать пользователю сообщение, что он ввел меньше и больше данных, чем требуется.
Приложение должно распарсить полученную строку и выделить из них требуемые значения. Если форматы данных не совпадают, нужно бросить исключение, соответствующее типу проблемы. Можно использовать встроенные типы java и создать свои. Исключение должно быть корректно обработано, пользователю выведено сообщение с информацией, что именно неверно.
Если всё введено и обработано верно, должен создаться файл с названием, равным фамилии, в него в одну строку должны записаться полученные данные, вида
        <Фамилия> <Имя> <Отчество> <дата _ рождения> <номер _ телефона> <пол>
Однофамильцы должны записаться в один и тот же файл, в отдельные строки. Не забудьте закрыть соединение с файлом.
При возникновении проблемы с чтением-записью в файл, исключение должно быть корректно обработано, пользователь должен увидеть стектрейс ошибки.*/

import java.util.Scanner;

public class UserData {
    public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            User user;
            System.out.println("Введите данные разделённые пробелом (Фамилия Имя Отчество дата_рождения(dd.mm.yyyy) номер_телефона(1234567) пол(f или m): ");
            String input = scanner.nextLine();
            String[] data = input.split("\\s");

        if (data.length < 6) {
            throw new RuntimeException("Ошибка: Введено меньше данных чем нужно");
        }
        if (data.length > 6) {
            throw new RuntimeException("Ошибка: Введено больше данных чем нужно");
        }

            user = new User(data);

            Writer writer = new Writer();
            writer.write(user);
        }
    }